# NOTE: This file is auto-generated, please do not modify

from ..packet import *


class ACI_GATT_ATTRIBUTE_MODIFIED_EVENT(VendorEventPacket):
    """
    This event is generated to the application by the GATT server when a client modifies any
    attribute on the server, as consequence of one of the following GATT procedures:
    - write without response
    - signed write without response
    - write characteristic value
    - write long characteristic value
    - reliable write.
    """

    SUBCODE = 0x0C01

    Connection_Handle = Parameter(order=1, size=2)
    """
    The connection handle which modified the attribute.
    """

    Attr_Handle = Parameter(order=2, size=2)
    """
    Handle of the attribute that was modified.
    """

    Offset = Parameter(order=3, size=2)
    """
    SoC mode: the offset is never used and it is always 0. Network coprocessor mode:
        
        Bits 0-14: offset of the reported value inside the attribute.
        Bit 15: if the entire value of the attribute does not fit inside a single ACI_GATT_ATTRIBUTE_MODIFIED_EVENT event, this bit is set to 1 to notify that other ACI_GATT_ATTRIBUTE_MODIFIED_EVENT events will follow to report the remaining value.
    """

    Attr_Data_Length = Parameter(order=4, size=2)
    """
    Length of Attr_Data in octets
    """

    Attr_Data = Parameter(order=5, size=Attr_Data_Length)
    """
    The modified value
    """


class ACI_GATT_PROC_TIMEOUT_EVENT(VendorEventPacket):
    """
    This event is generated by the client/server to the application on a GATT timeout (30
    seconds). This is a critical event that should not happen during normal operating conditions. It is an indication of either a major disruption in the communication link or a mistake in the application which does not provide a reply to GATT procedures. After this event, the GATT channel is closed and no more GATT communication can be performed. The applications is exptected to issue an ACI_GAP_TERMINATE to disconnect from the peer device. It is important to leave an 100 ms blank window before sending the ACI_GAP_TERMINATE, since immediately after this event, system could save important information in non volatile memory.
    """

    SUBCODE = 0x0C02

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle on which the GATT procedure has timed out
    """


class ACI_ATT_EXCHANGE_MTU_RESP_EVENT(VendorEventPacket):
    """
    This event is generated in response to an Exchange MTU request (local or from the peer). See ACI_GATT_EXCHANGE_CONFIG.
    """

    SUBCODE = 0x0C03

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Server_RX_MTU = Parameter(order=2, size=2)
    """
    ATT_MTU value agreed between server and client
    """


class ACI_ATT_FIND_INFO_RESP_EVENT(VendorEventPacket):
    """
    This event is generated in response to a Find Information Request. See
    ACI_ATT_FIND_INFO_REQ and Find Information Response in Bluetooth Core v4.1
    spec.
    """

    SUBCODE = 0x0C04

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Format = Parameter(order=2, size=1)
    """
    Format of the hanndle-uuid pairs
    """

    Event_Data_Length = Parameter(order=3, size=1)
    """
    Length of Handle_UUID_Pair in octets
    """

    Handle_UUID_Pair = Parameter(order=4, size=Event_Data_Length)
    """
    A sequence of handle-uuid pairs. if format=1, each pair is:[2 octets for handle, 2 octets for UUIDs], if format=2, each pair is:[2 octets for handle, 16 octets for UUIDs]
    """


class ACI_ATT_FIND_BY_TYPE_VALUE_RESP_EVENT(VendorEventPacket):
    """
    This event is generated in response to a ACI_ATT_FIND_BY_TYPE_VALUE_REQ
    """

    SUBCODE = 0x0C05

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Num_of_Handle_Pair = Parameter(order=2, size=1)
    """
    Number of attribute, group handle pairs
    """

    Found_Attribute_Handle_N = Parameter(order=3, size=2)
    """
    Found Attribute handle
    """

    Group_End_Handle_N = Parameter(order=4, size=2)
    """
    Group End handle
    """


class ACI_ATT_READ_BY_TYPE_RESP_EVENT(VendorEventPacket):
    """
    This event is generated in response to a ACI_ATT_READ_BY_TYPE_REQ. See
    ACI_GATT_FIND_INCLUDED_SERVICES and ACI_GATT_DISC_ALL_CHAR_DESC.
    """

    SUBCODE = 0x0C06

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Handle_Value_Pair_Length = Parameter(order=2, size=1)
    """
    The size of each attribute handle-value pair
    """

    Data_Length = Parameter(order=3, size=1)
    """
    Length of Handle_Value_Pair_Data in octets
    """

    Handle_Value_Pair_Data = Parameter(order=4, size=Data_Length)
    """
    Attribute Data List as defined in Bluetooth Core v4.1 spec. A sequence of handle-value pairs: [2 octets for Attribute Handle, (Handle_Value_Pair_Length - 2 octets) for Attribute Value]
    """


class ACI_ATT_READ_RESP_EVENT(VendorEventPacket):
    """
    This event is generated in response to a Read Request. See ACI_GATT_READ_CHAR_VALUE.
    """

    SUBCODE = 0x0C07

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Event_Data_Length = Parameter(order=2, size=1)
    """
    Length of following data
    """

    Attribute_Value = Parameter(order=3, size=Event_Data_Length)
    """
    The value of the attribute.
    """


class ACI_ATT_READ_BLOB_RESP_EVENT(VendorEventPacket):
    """
    This event can be generated during a read long characteristic value procedure. See ACI_GATT_READ_LONG_CHAR_VALUE.
    """

    SUBCODE = 0x0C08

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Event_Data_Length = Parameter(order=2, size=1)
    """
    Length of following data
    """

    Attribute_Value = Parameter(order=3, size=Event_Data_Length)
    """
    Part of the attribute value.
    """


class ACI_ATT_READ_MULTIPLE_RESP_EVENT(VendorEventPacket):
    """
    This event is generated in response to a Read Multiple Request.
    """

    SUBCODE = 0x0C09

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Event_Data_Length = Parameter(order=2, size=1)
    """
    Length of following data
    """

    Set_Of_Values = Parameter(order=3, size=Event_Data_Length)
    """
    A set of two or more values.
        A concatenation of attribute values for each of the attribute handles in the request in the order that they were requested.
    """


class ACI_ATT_READ_BY_GROUP_TYPE_RESP_EVENT(VendorEventPacket):
    """
    This event is generated in response to a Read By Group Type Request. See
    ACI_GATT_DISC_ALL_PRIMARY_SERVICES.
    """

    SUBCODE = 0x0C0A

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Attribute_Data_Length = Parameter(order=2, size=1)
    """
    The size of each attribute data
    """

    Data_Length = Parameter(order=3, size=1)
    """
    Length of Attribute_Data_List in octets
    """

    Attribute_Data_List = Parameter(order=4, size=Data_Length)
    """
    Attribute Data List as defined in Bluetooth Core v4.1 spec. A sequence of attribute handle, end group handle, attribute value tuples: [2 octets for Attribute Handle, 2 octets End Group Handle, (Attribute_Data_Length - 4 octets) for Attribute Value]
    """


class ACI_ATT_PREPARE_WRITE_RESP_EVENT(VendorEventPacket):
    """
    This event is generated in response to a ACI_ATT_PREPARE_WRITE_REQ.
    """

    SUBCODE = 0x0C0C

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Attribute_Handle = Parameter(order=2, size=2)
    """
    The handle of the attribute to be written
    """

    Offset = Parameter(order=3, size=2)
    """
    The offset of the first octet to be written.
    """

    Part_Attribute_Value_Length = Parameter(order=4, size=1)
    """
    Length of Part_Attribute_Value in octets
    """

    Part_Attribute_Value = Parameter(order=5, size=Part_Attribute_Value_Length)
    """
    The value of the attribute to be written
    """


class ACI_ATT_EXEC_WRITE_RESP_EVENT(VendorEventPacket):
    """
    This event is generated in response to an Execute Write Request.
    """

    SUBCODE = 0x0C0D

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """


class ACI_GATT_INDICATION_EVENT(VendorEventPacket):
    """
    This event is generated when an indication is received from the server.
    """

    SUBCODE = 0x0C0E

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Attribute_Handle = Parameter(order=2, size=2)
    """
    The handle of the attribute
    """

    Attribute_Value_Length = Parameter(order=3, size=1)
    """
    Length of Attribute_Value in octets
    """

    Attribute_Value = Parameter(order=4, size=Attribute_Value_Length)
    """
    The current value of the attribute
    """


class ACI_GATT_NOTIFICATION_EVENT(VendorEventPacket):
    """
    This event is generated when a notification is received from the server.
    """

    SUBCODE = 0x0C0F

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Attribute_Handle = Parameter(order=2, size=2)
    """
    The handle of the attribute
    """

    Attribute_Value_Length = Parameter(order=3, size=1)
    """
    Length of Attribute_Value in octets
    """

    Attribute_Value = Parameter(order=4, size=Attribute_Value_Length)
    """
    The current value of the attribute
    """


class ACI_GATT_PROC_COMPLETE_EVENT(VendorEventPacket):
    """
    This event is generated when a GATT client procedure completes either with error or
    successfully.
    """

    SUBCODE = 0x0C10

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Error_Code = Parameter(order=2, size=1)
    """
    Indicates whether the procedure completed with an error or was successful.
    """


class ACI_GATT_ERROR_RESP_EVENT(VendorEventPacket):
    """
    This event is generated when an Error Response is received from the server. The error
    response can be given by the server at the end of one of the GATT discovery procedures.
    This does not mean that the procedure ended with an error, but this error event is part of the
    procedure itself.
    """

    SUBCODE = 0x0C11

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Req_Opcode = Parameter(order=2, size=1)
    """
    The request that generated this error response
    """

    Attribute_Handle = Parameter(order=3, size=2)
    """
    The attribute handle that generated this error response
    """

    Error_Code_Choices = {
        0x01: "Invalid handle",
        0x02: "Read not permitted",
        0x03: "Write not permitted",
        0x04: "Invalid PDU",
        0x05: "Insufficient authentication",
        0x06: "Request not supported",
        0x07: "Invalid offset",
        0x08: "Insufficient authorization",
        0x09: "Prepare queue full",
        0x0A: "Attribute not found",
        0x0B: "Attribute not long",
        0x0C: "Insufficient encryption key size",
        0x0D: "Invalid attribute value length",
        0x0E: "Unlikely error",
        0x0F: "Insufficient encryption",
        0x10: "Unsupported group type",
        0x11: "Insufficient resources",
    }
    Error_Code = Parameter(order=4, size=1, choices=Error_Code_Choices)
    """
    The reason why the request has generated an error response (ATT error codes)
    """


class ACI_GATT_DISC_READ_CHAR_BY_UUID_RESP_EVENT(VendorEventPacket):
    """
    This event can be generated during a "Discover Characteristics By UUID" procedure or a
    "Read using Characteristic UUID" procedure.
    The attribute value will be a service declaration as defined in Bluetooth Core v4.1spec
    (vol.3, Part G, ch. 3.3.1), when a "Discover Characteristics By UUID" has been started. It will
    be the value of the Characteristic if a* "Read using Characteristic UUID" has been
    performed.
    """

    SUBCODE = 0x0C12

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Attribute_Handle = Parameter(order=2, size=2)
    """
    The handle of the attribute
    """

    Attribute_Value_Length = Parameter(order=3, size=1)
    """
    Length of Attribute_Value in octets
    """

    Attribute_Value = Parameter(order=4, size=Attribute_Value_Length)
    """
    The attribute value will be a service declaration as defined in Bluetooth Core v4.0 spec
        (vol.3, Part G, ch. 3.3.1), when a "Discover Characteristics By UUID" has been started.
        It will be the value of the Characteristic if a "Read using Characteristic UUID" has been performed.
    """


class ACI_GATT_WRITE_PERMIT_REQ_EVENT(VendorEventPacket):
    """
    This event is given to the application when a write request, write command or signed write
    command is received by the server from the client. This event will be given to the application
    only if the event bit for this event generation is set when the characteristic was added.
    When this event is received, the application has to check whether the value being requested
    for write can be allowed to be written and respond with the command ACI_GATT_WRITE_RESP.
    The details of the parameters of the command can be found. Based on the response from
    the application, the attribute value will be modified by the stack. If the write is rejected by the
    application, then the value of the attribute will not be modified. In case of a write REQ, an
    error response will be sent to the client, with the error code as specified by the application.
    In case of write/signed write commands, no response is sent to the client but the attribute is
    not modified.
    """

    SUBCODE = 0x0C13

    Connection_Handle = Parameter(order=1, size=2)
    """
    Handle of the connection on which there was the request to write the attribute
    """

    Attribute_Handle = Parameter(order=2, size=2)
    """
    The handle of the attribute
    """

    Data_Length = Parameter(order=3, size=1)
    """
    Length of Data field
    """

    Data = Parameter(order=4, size=Data_Length)
    """
    The data that the client has requested to write
    """


class ACI_GATT_READ_PERMIT_REQ_EVENT(VendorEventPacket):
    """
    This event is given to the application when a read request or read blob request is received
    by the server from the client. This event will be given to the application only if the event bit
    for this event generation is set when the characteristic was added.
    On receiving this event, the application can update the value of the handle if it desires and
    when done, it has to send the ACI_GATT_ALLOW_READ command to indicate to the stack that it
    can send the response to the client.
    """

    SUBCODE = 0x0C14

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the response
    """

    Attribute_Handle = Parameter(order=2, size=2)
    """
    The handle of the attribute
    """

    Offset = Parameter(order=3, size=2)
    """
    Contains the offset from which the read has been requested
    """


class ACI_GATT_READ_MULTI_PERMIT_REQ_EVENT(VendorEventPacket):
    """
    This event is given to the application when a read multiple request or read by type request is
    received by the server from the client. This event will be given to the application only if the
    event bit for this event generation is set when the characteristic was added.
    On receiving this event, the application can update the values of the handles if it desires and
    when done, it has to send the ACI_GATT_ALLOW_READ command to indicate to the stack that it
    can send the response to the client.
    """

    SUBCODE = 0x0C15

    Connection_Handle = Parameter(order=1, size=2)
    """
    Handle of the connection which requested to read the attribute
    """

    Number_of_Handles = Parameter(order=2, size=1)
    """
    N/A
    """

    Handle_N = Parameter(order=3, size=2)
    """
    N/A
    """


class ACI_GATT_TX_POOL_AVAILABLE_EVENT(VendorEventPacket):
    """
    Each time BLE FW stack raises the error code BLE_STATUS_INSUFFICIENT_RESOURCES (0x64),
    the ACI_GATT_TX_POOL_AVAILABLE_EVENT event is generated as soon as the available buffer size 
    is greater than maximum ATT MTU (on stack versions below v2.1 this event is generated when at least 2 packets
    with MTU of 23 bytes are available).
    """

    SUBCODE = 0x0C16

    Connection_Handle = Parameter(order=1, size=2)
    """
    Not used. Always 0.
    """

    Available_Buffers = Parameter(order=2, size=2)
    """
    Not used.
    """


class ACI_GATT_SERVER_CONFIRMATION_EVENT(VendorEventPacket):
    """
    This event is generated when the client has sent the confirmation to a previously sent indication
    """

    SUBCODE = 0x0C17

    Connection_Handle = Parameter(order=1, size=2)
    """
    Connection handle related to the event
    """


class ACI_GATT_PREPARE_WRITE_PERMIT_REQ_EVENT(VendorEventPacket):
    """
    This event is given to the application when a prepare write request
    is received by the server from the client. This event will be given to the application
    only if the event bit for this event generation is set when the characteristic was added.
    When this event is received, the application has to check whether the value being requested
    for write can be allowed to be written and respond with the command ACI_GATT_WRITE_RESP.
    Based on the response from the application, the attribute value will be modified by the stack.
    If the write is rejected by the application, then the value of the attribute will not be modified
    and an error response will be sent to the client, with the error code as specified by the application.
    """

    SUBCODE = 0x0C18

    Connection_Handle = Parameter(order=1, size=2)
    """
    Handle of the connection on which there was the request to write the attribute
    """

    Attribute_Handle = Parameter(order=2, size=2)
    """
    The handle of the attribute
    """

    Offset = Parameter(order=3, size=2)
    """
    The offset from which the prepare write has been requested
    """

    Data_Length = Parameter(order=4, size=1)
    """
    Length of Data field
    """

    Data = Parameter(order=5, size=Data_Length)
    """
    The data that the client has requested to write
    """

